# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-proj:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
    - uses: actions/checkout@v3

    #- name: Install chocolatey
    #  shell: pwsh
    #  run: Set-ExecutionPolicy Bypass -Scope Process -Force;
    #       $InstallDir = 'C:\ProgramData\chocoportable';
    #        $env:ChocolateyInstall = $InstallDir;
    #        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    # - name: Install Docker
    #  run: choco install docker-desktop -y

    #- name: Start Docker
    #  shell: pwsh
    #  run: Set-ExecutionPolicy Bypass -Scope Process -Force;
    #       dockerd --exec-opt isolation=hyperv
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      with:
        snapshot-dependency-file-name: '/dependency-snapshots'

    - name: Build and Push Docker Image
      run: |  
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/psic-proj:fromGIT .
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/psic-proj:fromGIT

          
